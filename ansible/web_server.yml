---
- name: Provision EC2 instance
  hosts: web_servers
  gather_facts: true
  become: true
  connection: local
  vars:
    security_group: ansible-user-sec-group
    key_pair: us-east-1-ansible-user-key1
    aws_access_key_id: xxxxxxxxxx
    aws_secret_key: xxx/xxxx
    aws_region: us-east-1
    subnet_id: subnet-073ce1117f4978e28 

  tasks:
    - name: Install AWS CLI
      pip:
        name: awscli
        state: present

    - name: Get Ubuntu 20.04 LTS AMI ID
      command: "aws ec2 describe-images --owners 099720109477 --filters 'Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*' --query 'Images[0].ImageId' --output text"
      register: ami_id

    - name: Gather information about security group
      ec2_group_info:
        region: "{{ aws_region }}"
        filters:
          group-name: "{{ security_group }}"
      register: sg_info

    - name: Add SSH and HTTP rules to security group
      ec2_group:
        name: "{{ security_group }}"
        region: "{{ aws_region }}"
        "description": testing,
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 22

    - name: Start an instance with a public IP address
      amazon.aws.ec2_instance:
        name: "ec2-instance-1"
        key_name: "{{ key_pair }}"
        vpc_subnet_id: "{{ subnet_id }}"
        instance_type: t2.micro
        security_group: "{{ security_group }}"
        aws_access_key: "{{ aws_access_key_id }}" 
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        network:
          assign_public_ip: true
        image_id: "{{ ami_id.stdout }}"
        wait: yes
        count: 1
        tags:
          Environment: Testing
      register: ec2_instance

    - name: Print EC2 public IP
      debug:
        msg: "EC2 Public IP: {{ item.public_ip_address }}"
      with_items: "{{ ec2_instance.instances }}"
